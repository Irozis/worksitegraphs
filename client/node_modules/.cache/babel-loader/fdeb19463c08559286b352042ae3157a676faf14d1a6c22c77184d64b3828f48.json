{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\StationList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StationList = () => {\n  _s();\n  const {\n    data: stations\n  } = useFetch('/api/stations');\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: stations === null || stations === void 0 ? void 0 : stations.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/location/${s.id}`,\n        children: s.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), s.hasAlert && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 26\n      }, this)]\n    }, s.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(StationList, \"2oXootJIf6asYW5VaSwEy6whfvk=\", false, function () {\n  return [useFetch];\n});\n_c = StationList;\nexport default StationList;\nvar _c;\n$RefreshReg$(_c, \"StationList\");","map":{"version":3,"names":["React","Link","useFetch","jsxDEV","_jsxDEV","StationList","_s","data","stations","children","map","s","to","id","name","fileName","_jsxFileName","lineNumber","columnNumber","hasAlert","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/StationList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Station } from '../types';\r\nimport useFetch from '../hooks/useFetch';\r\n\r\nconst StationList: React.FC = () => {\r\n  const { data: stations } = useFetch<Station[]>('/api/stations');\r\n  return (\r\n    <ul>\r\n      {stations?.map(s => (\r\n        <li key={s.id}>\r\n          <Link to={`/location/${s.id}`}>{s.name}</Link>\r\n          {s.hasAlert && <span>⚠️</span>}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default StationList;"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGN,QAAQ,CAAY,eAAe,CAAC;EAC/D,oBACEE,OAAA;IAAAK,QAAA,EACGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,GAAG,CAACC,CAAC,iBACdP,OAAA;MAAAK,QAAA,gBACEL,OAAA,CAACH,IAAI;QAACW,EAAE,EAAE,aAAaD,CAAC,CAACE,EAAE,EAAG;QAAAJ,QAAA,EAAEE,CAAC,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC7CP,CAAC,CAACQ,QAAQ,iBAAIf,OAAA;QAAAK,QAAA,EAAM;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFvBP,CAAC,CAACE,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGT,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACZ,EAAA,CAZID,WAAqB;EAAA,QACEH,QAAQ;AAAA;AAAAkB,EAAA,GAD/Bf,WAAqB;AAc3B,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}