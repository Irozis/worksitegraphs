{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\ChartModal.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/components/ChartModal.tsx\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport useFetch from '../hooks/useFetch';\nimport './ChartModal.css'; // см. примечание ниже\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartModal = ({\n  visible,\n  onClose,\n  objectId,\n  title\n}) => {\n  _s();\n  // по умолчанию интервал последние 24 часа\n  const now = new Date();\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  const isoInput = d => d.toISOString().slice(0, 16);\n  const [start, setStart] = useState(isoInput(ago24h));\n  const [end, setEnd] = useState(isoInput(now));\n  const [intervalMin, setIntervalMin] = useState(5);\n  const [minBound, setMinBound] = useState('');\n  const [maxBound, setMaxBound] = useState('');\n\n  // подгружаем данные из API\n  const {\n    data: rawData\n  } = useFetch(`/api/objects/${objectId}/data?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}`);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (rawData) {\n      setData(rawData);\n    }\n  }, [rawData]);\n\n  // генерируем CSV-контент\n  const csvContent = useMemo(() => {\n    if (!data.length) return '';\n    const header = ['timestamp', 'value'];\n    const rows = data.map(d => [d.timestamp, d.value != null ? d.value.toString() : '']);\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\n  }, [data]);\n  const downloadCsv = () => {\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title.replace(/\\s+/g, '_')}_${start}_${end}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: start,\n            onChange: e => setStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041F\\u043E:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: end,\n            onChange: e => setEnd(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B (\\u043C\\u0438\\u043D):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: intervalMin,\n            onChange: e => setIntervalMin(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0438\\u043D. \\u0413\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: minBound,\n            onChange: e => setMinBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0430\\u043A\\u0441. \\u0413\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: maxBound,\n            onChange: e => setMaxBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"csv-button\",\n          onClick: downloadCsv,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(LineChart, {\n          width: 1500,\n          height: 700,\n          data: data,\n          style: {\n            backgroundColor: '#000',\n            fontFamily: 'Roboto, sans-serif'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#444\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"timestamp\",\n            stroke: \"#FFD014\",\n            tickFormatter: str => new Date(str).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#FFD014\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#000',\n              borderColor: '#FFD014',\n              color: '#FFD014',\n              fontFamily: 'Roboto, sans-serif'\n            },\n            labelFormatter: label => new Date(label).toLocaleString(),\n            formatter: value => [value === null || value === void 0 ? void 0 : value.toFixed(2), '']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\",\n            stroke: \"#FFD014\",\n            dot: dotProps => {\n              const {\n                cx,\n                cy,\n                payload,\n                index\n              } = dotProps;\n              const key = `${payload.timestamp}-${index}`;\n              // можно подсветить выход за границы:\n              const val = payload.value;\n              const isOut = minBound && val != null && val < Number(minBound) || maxBound && val != null && val > Number(maxBound);\n              return /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: isOut ? 6 : 4,\n                fill: \"#FFD014\",\n                stroke: \"#FFD014\",\n                style: {\n                  cursor: 'pointer'\n                }\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table\",\n          style: {\n            width: 100,\n            height: 700,\n            overflowY: 'auto',\n            fontFamily: 'Roboto, sans-serif'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: new Date(d.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: d.value != null ? d.value.toFixed(2) : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, `${d.timestamp}-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartModal, \"Nox1KWuNjriMUnTXSp1IypyVrS4=\", false, function () {\n  return [useFetch];\n});\n_c = ChartModal;\nexport default ChartModal;\nvar _c;\n$RefreshReg$(_c, \"ChartModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","useFetch","jsxDEV","_jsxDEV","ChartModal","visible","onClose","objectId","title","_s","now","Date","ago24h","getTime","isoInput","d","toISOString","slice","start","setStart","end","setEnd","intervalMin","setIntervalMin","minBound","setMinBound","maxBound","setMaxBound","data","rawData","encodeURIComponent","setData","csvContent","length","header","rows","map","timestamp","value","toString","r","join","downloadCsv","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","replace","click","revokeObjectURL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","min","Number","placeholder","width","height","style","backgroundColor","fontFamily","stroke","dataKey","tickFormatter","str","toLocaleString","contentStyle","borderColor","color","labelFormatter","label","formatter","toFixed","dot","dotProps","cx","cy","payload","index","key","val","isOut","fill","cursor","overflowY","i","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/ChartModal.tsx"],"sourcesContent":["// File: client/src/components/ChartModal.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport useFetch from '../hooks/useFetch';\r\nimport './ChartModal.css'; // см. примечание ниже\r\n\r\ninterface DataPoint {\r\n  timestamp: string;\r\n  value: number | null;\r\n}\r\n\r\ninterface ChartModalProps {\r\n  /** должен быть true, когда окно открыто */\r\n  visible: boolean;\r\n  /** колбэк закрытия окна */\r\n  onClose: () => void;\r\n  /** id объекта оборудования */\r\n  objectId: number;\r\n  /** заголовок окна, например \"Temperature\" */\r\n  title: string;\r\n}\r\n\r\nconst ChartModal: React.FC<ChartModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  objectId,\r\n  title,\r\n}) => {\r\n  // по умолчанию интервал последние 24 часа\r\n  const now     = new Date();\r\n  const ago24h  = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const isoInput = (d: Date) => d.toISOString().slice(0, 16);\r\n\r\n  const [start, setStart]         = useState<string>(isoInput(ago24h));\r\n  const [end, setEnd]             = useState<string>(isoInput(now));\r\n  const [intervalMin, setIntervalMin] = useState<number>(5);\r\n  const [minBound, setMinBound]   = useState<string>('');\r\n  const [maxBound, setMaxBound]   = useState<string>('');\r\n\r\n  // подгружаем данные из API\r\n  const { data: rawData } = useFetch<DataPoint[]>(\r\n    `/api/objects/${objectId}/data?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}`\r\n  );\r\n  const [data, setData] = useState<DataPoint[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (rawData) {\r\n      setData(rawData);\r\n    }\r\n  }, [rawData]);\r\n\r\n  // генерируем CSV-контент\r\n  const csvContent = useMemo(() => {\r\n    if (!data.length) return '';\r\n    const header = ['timestamp', 'value'];\r\n    const rows = data.map(d => [\r\n      d.timestamp,\r\n      d.value != null ? d.value.toString() : '',\r\n    ]);\r\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\r\n  }, [data]);\r\n\r\n  const downloadCsv = () => {\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url  = URL.createObjectURL(blob);\r\n    const a    = document.createElement('a');\r\n    a.href     = url;\r\n    a.download = `${title.replace(/\\s+/g, '_')}_${start}_${end}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-window\">\r\n        <button className=\"close-button\" onClick={onClose}>\r\n          ×\r\n        </button>\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n\r\n        <div className=\"modal-controls\">\r\n          <label>\r\n            С:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={start}\r\n              onChange={e => setStart(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            По:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={end}\r\n              onChange={e => setEnd(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Интервал (мин):{' '}\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={intervalMin}\r\n              onChange={e => setIntervalMin(Number(e.target.value))}\r\n            />\r\n          </label>\r\n          <label>\r\n            Мин. Граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={minBound}\r\n              onChange={e => setMinBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Макс. Граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={maxBound}\r\n              onChange={e => setMaxBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <button className=\"csv-button\" onClick={downloadCsv}>\r\n            Скачать CSV\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chart-table-container\">\r\n          <LineChart\r\n            width={1500}\r\n            height={700}\r\n            data={data}\r\n            style={{ backgroundColor: '#000', fontFamily: 'Roboto, sans-serif' }}\r\n          >\r\n            <CartesianGrid stroke=\"#444\" />\r\n            <XAxis\r\n              dataKey=\"timestamp\"\r\n              stroke=\"#FFD014\"\r\n              tickFormatter={str => new Date(str).toLocaleString()}\r\n            />\r\n            <YAxis stroke=\"#FFD014\" />\r\n            <Tooltip\r\n              contentStyle={{\r\n                backgroundColor: '#000',\r\n                borderColor: '#FFD014',\r\n                color: '#FFD014',\r\n                fontFamily: 'Roboto, sans-serif',\r\n              }}\r\n              labelFormatter={label => new Date(label).toLocaleString()}\r\n              formatter={value => [(value as number)?.toFixed(2), '']}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"value\"\r\n              stroke=\"#FFD014\"\r\n              dot={dotProps => {\r\n                const { cx, cy, payload, index } = dotProps;\r\n                const key = `${payload.timestamp}-${index}`;\r\n                // можно подсветить выход за границы:\r\n                const val = payload.value as number | null;\r\n                const isOut =\r\n                  (minBound && val != null && val < Number(minBound)) ||\r\n                  (maxBound && val != null && val > Number(maxBound));\r\n                return (\r\n                  <circle\r\n                    key={key}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={isOut ? 6 : 4}\r\n                    fill=\"#FFD014\"\r\n                    stroke=\"#FFD014\"\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </LineChart>\r\n\r\n          <div\r\n            className=\"data-table\"\r\n            style={{\r\n              width: 100,\r\n              height: 700,\r\n              overflowY: 'auto',\r\n              fontFamily: 'Roboto, sans-serif',\r\n            }}\r\n          >\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ color: '#FFD014' }}>Время</th>\r\n                  <th style={{ color: '#FFD014' }}>Значение</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((d, i) => (\r\n                  <tr key={`${d.timestamp}-${i}`}>\r\n                    <td style={{ color: '#FFD014' }}>\r\n                      {new Date(d.timestamp).toLocaleString()}\r\n                    </td>\r\n                    <td style={{ color: '#FFD014' }}>\r\n                      {d.value != null ? d.value.toFixed(2) : '—'}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}