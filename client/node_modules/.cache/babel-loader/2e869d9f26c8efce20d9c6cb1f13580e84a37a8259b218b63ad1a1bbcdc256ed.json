{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\ChartModal.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/components/ChartModal.tsx\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport useFetch from '../hooks/useFetch';\nimport './ChartModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartModal = ({\n  visible,\n  onClose,\n  objectId,\n  type,\n  onAlert\n}) => {\n  _s();\n  const titleMap = {\n    voltage: 'Напряжение / Время',\n    current: 'Ток / Время',\n    temperature: 'Температура / Время'\n  };\n  const title = titleMap[type];\n\n  // default last 24h\n  const now = new Date();\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  const fmtLocal = d => d.toISOString().slice(0, 16);\n  const [start, setStart] = useState(fmtLocal(ago24h));\n  const [end, setEnd] = useState(fmtLocal(now));\n  const [intervalMin, setIntervalMin] = useState(5);\n  const [minBound, setMinBound] = useState('');\n  const [maxBound, setMaxBound] = useState('');\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\n  const {\n    data: rawData\n  } = useFetch(`/api/objects/${objectId}/data${query}`);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (rawData) setData(rawData);\n  }, [rawData]);\n  const csvContent = useMemo(() => {\n    if (!data.length) return '';\n    const header = ['timestamp', 'value'];\n    const rows = data.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\n  }, [data]);\n  const downloadCsv = () => {\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${type}_${start}_${end}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: start,\n            onChange: e => setStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041F\\u043E:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: end,\n            onChange: e => setEnd(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B (\\u043C\\u0438\\u043D):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: intervalMin,\n            onChange: e => setIntervalMin(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0438\\u043D. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: minBound,\n            onChange: e => setMinBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0430\\u043A\\u0441. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: maxBound,\n            onChange: e => setMaxBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"csv-button\",\n          onClick: downloadCsv,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(LineChart, {\n          width: 1500,\n          height: 700,\n          data: data,\n          style: {\n            backgroundColor: '#000',\n            fontFamily: 'Roboto, sans-serif'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#444\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"timestamp\",\n            stroke: \"#FFD014\",\n            tickFormatter: str => {\n              const d = new Date(str);\n              return `${d.getHours()}:${String(d.getMinutes()).padStart(2, '0')}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#FFD014\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#000',\n              borderColor: '#FFD014',\n              fontFamily: 'Roboto, sans-serif'\n            },\n            labelFormatter: label => new Date(label).toLocaleString(),\n            formatter: value => {\n              const num = value == null ? NaN : Number(value);\n              return [isNaN(num) ? '—' : num.toFixed(2), ''];\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\",\n            stroke: \"#FFD014\",\n            dot: dotProps => {\n              const {\n                cx,\n                cy,\n                payload,\n                index\n              } = dotProps;\n              const key = `${payload.timestamp}-${index}`;\n              const rawVal = payload.value;\n              const numVal = rawVal == null ? NaN : Number(rawVal);\n              const isOut = minBound && !isNaN(numVal) && numVal < Number(minBound) || maxBound && !isNaN(numVal) && numVal > Number(maxBound);\n              if (isOut && onAlert) {\n                onAlert(payload.timestamp, numVal);\n              }\n              return /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: isOut ? 6 : 4,\n                fill: isOut ? 'red' : '#FFD014',\n                stroke: \"#FFD014\",\n                style: {\n                  cursor: 'pointer'\n                }\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((d, i) => {\n                const num = d.value == null ? NaN : Number(d.value);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: new Date(d.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: isNaN(num) ? '—' : num.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this)]\n                }, `${d.timestamp}-${i}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartModal, \"v2ZAvBFuEv38eBIK1/grGusHoLs=\", false, function () {\n  return [useFetch];\n});\n_c = ChartModal;\nexport default ChartModal;\nvar _c;\n$RefreshReg$(_c, \"ChartModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","useFetch","jsxDEV","_jsxDEV","ChartModal","visible","onClose","objectId","type","onAlert","_s","titleMap","voltage","current","temperature","title","now","Date","ago24h","getTime","fmtLocal","d","toISOString","slice","start","setStart","end","setEnd","intervalMin","setIntervalMin","minBound","setMinBound","maxBound","setMaxBound","query","encodeURIComponent","data","rawData","setData","csvContent","length","header","rows","map","timestamp","value","String","r","join","downloadCsv","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","min","Number","placeholder","width","height","style","backgroundColor","fontFamily","stroke","dataKey","tickFormatter","str","getHours","getMinutes","padStart","contentStyle","borderColor","labelFormatter","label","toLocaleString","formatter","num","NaN","isNaN","toFixed","dot","dotProps","cx","cy","payload","index","key","rawVal","numVal","isOut","fill","cursor","color","i","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/ChartModal.tsx"],"sourcesContent":["// File: client/src/components/ChartModal.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport useFetch from '../hooks/useFetch';\r\nimport './ChartModal.css';\r\n\r\ntype Metric = 'voltage' | 'current' | 'temperature';\r\n\r\ninterface DataPoint {\r\n  timestamp: string;\r\n  // pg returns numeric columns as strings, so support string here\r\n  value: string | number | null;\r\n}\r\n\r\ninterface ChartModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  objectId: number;\r\n  type: Metric;\r\n  onAlert?: (timestamp: string, value: number) => void;\r\n}\r\n\r\nconst ChartModal: React.FC<ChartModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  objectId,\r\n  type,\r\n  onAlert,\r\n}) => {\r\n  const titleMap: Record<Metric, string> = {\r\n    voltage:     'Напряжение / Время',\r\n    current:     'Ток / Время',\r\n    temperature: 'Температура / Время',\r\n  };\r\n  const title = titleMap[type];\r\n\r\n  // default last 24h\r\n  const now    = new Date();\r\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const fmtLocal = (d: Date) => d.toISOString().slice(0, 16);\r\n\r\n  const [start, setStart]             = useState<string>(fmtLocal(ago24h));\r\n  const [end, setEnd]                 = useState<string>(fmtLocal(now));\r\n  const [intervalMin, setIntervalMin] = useState<number>(5);\r\n  const [minBound, setMinBound]       = useState<string>('');\r\n  const [maxBound, setMaxBound]       = useState<string>('');\r\n\r\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\r\n  const { data: rawData } = useFetch<DataPoint[]>(`/api/objects/${objectId}/data${query}`);\r\n  const [data, setData] = useState<DataPoint[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (rawData) setData(rawData);\r\n  }, [rawData]);\r\n\r\n  const csvContent = useMemo(() => {\r\n    if (!data.length) return '';\r\n    const header = ['timestamp','value'];\r\n    const rows = data.map(d => [\r\n      d.timestamp,\r\n      d.value != null ? String(d.value) : '',\r\n    ]);\r\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\r\n  }, [data]);\r\n\r\n  const downloadCsv = () => {\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url  = URL.createObjectURL(blob);\r\n    const a    = document.createElement('a');\r\n    a.href     = url;\r\n    a.download = `${type}_${start}_${end}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-window\">\r\n        <button className=\"close-button\" onClick={onClose}>×</button>\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n\r\n        <div className=\"modal-controls\">\r\n          <label>\r\n            С:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={start}\r\n              onChange={e => setStart(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            По:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={end}\r\n              onChange={e => setEnd(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Интервал (мин):{' '}\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={intervalMin}\r\n              onChange={e => setIntervalMin(Number(e.target.value))}\r\n            />\r\n          </label>\r\n          <label>\r\n            Мин. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={minBound}\r\n              onChange={e => setMinBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Макс. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={maxBound}\r\n              onChange={e => setMaxBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <button className=\"csv-button\" onClick={downloadCsv}>\r\n            Скачать CSV\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chart-table-container\">\r\n          <LineChart\r\n            width={1500}\r\n            height={700}\r\n            data={data}\r\n            style={{ backgroundColor: '#000', fontFamily: 'Roboto, sans-serif' }}\r\n          >\r\n            <CartesianGrid stroke=\"#444\" />\r\n            <XAxis\r\n              dataKey=\"timestamp\"\r\n              stroke=\"#FFD014\"\r\n              tickFormatter={str => {\r\n                const d = new Date(str);\r\n                return `${d.getHours()}:${String(d.getMinutes()).padStart(2,'0')}`;\r\n              }}\r\n            />\r\n            <YAxis stroke=\"#FFD014\" />\r\n            <Tooltip\r\n              contentStyle={{\r\n                backgroundColor: '#000',\r\n                borderColor: '#FFD014',\r\n                fontFamily: 'Roboto, sans-serif',\r\n              }}\r\n              labelFormatter={label => new Date(label).toLocaleString()}\r\n              formatter={value => {\r\n                const num = value == null ? NaN : Number(value);\r\n                return [isNaN(num) ? '—' : num.toFixed(2), ''];\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"value\"\r\n              stroke=\"#FFD014\"\r\n              dot={dotProps => {\r\n                const { cx, cy, payload, index } = dotProps;\r\n                const key = `${payload.timestamp}-${index}`;\r\n                const rawVal = payload.value;\r\n                const numVal = rawVal == null ? NaN : Number(rawVal);\r\n                const isOut = \r\n                  (minBound && !isNaN(numVal) && numVal < Number(minBound)) ||\r\n                  (maxBound && !isNaN(numVal) && numVal > Number(maxBound));\r\n                if (isOut && onAlert) {\r\n                  onAlert(payload.timestamp, numVal);\r\n                }\r\n                return (\r\n                  <circle\r\n                    key={key}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={isOut ? 6 : 4}\r\n                    fill={isOut ? 'red' : '#FFD014'}\r\n                    stroke=\"#FFD014\"\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </LineChart>\r\n\r\n          <div className=\"data-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ color: '#FFD014' }}>Время</th>\r\n                  <th style={{ color: '#FFD014' }}>Значение</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((d, i) => {\r\n                  const num = d.value == null ? NaN : Number(d.value);\r\n                  return (\r\n                    <tr key={`${d.timestamp}-${i}`}>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {new Date(d.timestamp).toLocaleString()}\r\n                      </td>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {isNaN(num) ? '—' : num.toFixed(2)}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}