{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\ChartModal.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/components/ChartModal.tsx\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport useFetch from '../hooks/useFetch';\nimport './ChartModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartModal = ({\n  visible,\n  onClose,\n  objectId,\n  type,\n  onAlert\n}) => {\n  _s();\n  // Если не видно — не рендерим\n  if (!visible) return null;\n\n  // Закрытие по Esc\n  useEffect(() => {\n    const handler = e => {\n      if (e.key === 'Escape') onClose();\n    };\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [onClose]);\n  const titleMap = {\n    voltage: 'Напряжение / Время',\n    current: 'Ток / Время',\n    temperature: 'Температура / Время'\n  };\n  const title = titleMap[type];\n\n  // По умолчанию — последние 24 часа\n  const now = new Date();\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  const fmt = d => d.toISOString().slice(0, 16);\n  const [start, setStart] = useState(fmt(ago24h));\n  const [end, setEnd] = useState(fmt(now));\n  const [intervalMin, setIntervalMin] = useState(5);\n  const [minBound, setMinBound] = useState('');\n  const [maxBound, setMaxBound] = useState('');\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\n  const {\n    data: rawData\n  } = useFetch(`/api/objects/${objectId}/data${query}`);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (rawData) setData(rawData);\n  }, [rawData]);\n  const csvContent = useMemo(() => {\n    if (!data.length) return '';\n    const header = ['timestamp', 'value'];\n    const rows = data.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\n  }, [data]);\n  const downloadCsv = () => {\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${type}_${start}_${end}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return (\n    /*#__PURE__*/\n    // Клик по оверлею закрывает\n    _jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-window\",\n        onClick: e => e.stopPropagation(),\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0421:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: start,\n              onChange: e => setStart(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041F\\u043E:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: end,\n              onChange: e => setEnd(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B (\\u043C\\u0438\\u043D):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 1,\n              value: intervalMin,\n              onChange: e => setIntervalMin(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041C\\u0438\\u043D. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: minBound,\n              onChange: e => setMinBound(e.target.value),\n              placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041C\\u0430\\u043A\\u0441. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: maxBound,\n              onChange: e => setMaxBound(e.target.value),\n              placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"csv-button\",\n            onClick: downloadCsv,\n            children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-table-container\",\n          children: [/*#__PURE__*/_jsxDEV(LineChart, {\n            width: 1500,\n            height: 700,\n            data: data,\n            style: {\n              backgroundColor: '#000',\n              fontFamily: 'Roboto, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              stroke: \"#444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"timestamp\",\n              stroke: \"#FFD014\",\n              tickFormatter: str => {\n                const d = new Date(str);\n                return `${d.getHours()}:${d.getMinutes().toString().padStart(2, '0')}`;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              stroke: \"#FFD014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              contentStyle: {\n                backgroundColor: '#000',\n                borderColor: '#FFD014',\n                fontFamily: 'Roboto, sans-serif'\n              },\n              labelFormatter: l => new Date(l).toLocaleString(),\n              formatter: val => {\n                const num = val == null ? NaN : Number(val);\n                return [isNaN(num) ? '—' : num.toFixed(2), ''];\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"value\",\n              stroke: \"#FFD014\",\n              dot: dotProps => {\n                const {\n                  cx,\n                  cy,\n                  payload,\n                  index\n                } = dotProps;\n                const key = `${payload.timestamp}-${index}`;\n                const num = payload.value == null ? NaN : Number(payload.value);\n                const isOut = minBound && !isNaN(num) && num < Number(minBound) || maxBound && !isNaN(num) && num > Number(maxBound);\n                if (isOut && onAlert) {\n                  onAlert(payload.timestamp, num);\n                }\n                return /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: cx,\n                  cy: cy,\n                  r: isOut ? 6 : 4,\n                  fill: isOut ? 'red' : '#FFD014',\n                  stroke: \"#FFD014\",\n                  style: {\n                    cursor: 'pointer'\n                  }\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table\",\n            style: {\n              height: 700,\n              overflowY: 'auto',\n              width: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data.map((d, i) => {\n                  const num = d.value == null ? NaN : Number(d.value);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        color: '#FFD014'\n                      },\n                      children: new Date(d.timestamp).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        color: '#FFD014'\n                      },\n                      children: isNaN(num) ? '—' : num.toFixed(2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 23\n                    }, this)]\n                  }, `${d.timestamp}-${i}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ChartModal, \"d0JuGVYemkZJ0Bd2iDL4+NE6yV0=\", false, function () {\n  return [useFetch];\n});\n_c = ChartModal;\nexport default ChartModal;\nvar _c;\n$RefreshReg$(_c, \"ChartModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","useFetch","jsxDEV","_jsxDEV","ChartModal","visible","onClose","objectId","type","onAlert","_s","handler","e","key","window","addEventListener","removeEventListener","titleMap","voltage","current","temperature","title","now","Date","ago24h","getTime","fmt","d","toISOString","slice","start","setStart","end","setEnd","intervalMin","setIntervalMin","minBound","setMinBound","maxBound","setMaxBound","query","encodeURIComponent","data","rawData","setData","csvContent","length","header","rows","map","timestamp","value","String","r","join","downloadCsv","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","onClick","children","stopPropagation","style","position","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","min","Number","placeholder","width","height","backgroundColor","fontFamily","stroke","dataKey","tickFormatter","str","getHours","getMinutes","toString","padStart","contentStyle","borderColor","labelFormatter","l","toLocaleString","formatter","val","num","NaN","isNaN","toFixed","dot","dotProps","cx","cy","payload","index","isOut","fill","cursor","overflowY","color","i","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/ChartModal.tsx"],"sourcesContent":["// File: client/src/components/ChartModal.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport useFetch from '../hooks/useFetch';\r\nimport './ChartModal.css';\r\n\r\ntype Metric = 'voltage' | 'current' | 'temperature';\r\n\r\ninterface DataPoint {\r\n  timestamp: string;\r\n  value: string | number | null;\r\n}\r\n\r\ninterface ChartModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  objectId: number;\r\n  type: Metric;\r\n  onAlert?: (timestamp: string, value: number) => void;\r\n}\r\n\r\nconst ChartModal: React.FC<ChartModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  objectId,\r\n  type,\r\n  onAlert,\r\n}) => {\r\n  // Если не видно — не рендерим\r\n  if (!visible) return null;\r\n\r\n  // Закрытие по Esc\r\n  useEffect(() => {\r\n    const handler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n    };\r\n    window.addEventListener('keydown', handler);\r\n    return () => window.removeEventListener('keydown', handler);\r\n  }, [onClose]);\r\n\r\n  const titleMap: Record<Metric, string> = {\r\n    voltage:     'Напряжение / Время',\r\n    current:     'Ток / Время',\r\n    temperature: 'Температура / Время',\r\n  };\r\n  const title = titleMap[type];\r\n\r\n  // По умолчанию — последние 24 часа\r\n  const now    = new Date();\r\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const fmt = (d: Date) => d.toISOString().slice(0, 16);\r\n\r\n  const [start, setStart]             = useState<string>(fmt(ago24h));\r\n  const [end, setEnd]                 = useState<string>(fmt(now));\r\n  const [intervalMin, setIntervalMin] = useState<number>(5);\r\n  const [minBound, setMinBound]       = useState<string>('');\r\n  const [maxBound, setMaxBound]       = useState<string>('');\r\n\r\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\r\n  const { data: rawData } = useFetch<DataPoint[]>(`/api/objects/${objectId}/data${query}`);\r\n  const [data, setData] = useState<DataPoint[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (rawData) setData(rawData);\r\n  }, [rawData]);\r\n\r\n  const csvContent = useMemo(() => {\r\n    if (!data.length) return '';\r\n    const header = ['timestamp','value'];\r\n    const rows = data.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\r\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\r\n  }, [data]);\r\n\r\n  const downloadCsv = () => {\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url  = URL.createObjectURL(blob);\r\n    const a    = document.createElement('a');\r\n    a.href     = url;\r\n    a.download = `${type}_${start}_${end}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    // Клик по оверлею закрывает\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      {/* Предотвращаем закрытие при клике внутри окна */}\r\n      <div\r\n        className=\"modal-window\"\r\n        onClick={e => e.stopPropagation()}\r\n        style={{ position: 'relative' }}\r\n      >\r\n        <button\r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          aria-label=\"Закрыть\"\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n\r\n        <div className=\"modal-controls\">\r\n          <label>\r\n            С:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={start}\r\n              onChange={e => setStart(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            По:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={end}\r\n              onChange={e => setEnd(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Интервал (мин):{' '}\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={intervalMin}\r\n              onChange={e => setIntervalMin(Number(e.target.value))}\r\n            />\r\n          </label>\r\n          <label>\r\n            Мин. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={minBound}\r\n              onChange={e => setMinBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Макс. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={maxBound}\r\n              onChange={e => setMaxBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <button className=\"csv-button\" onClick={downloadCsv}>\r\n            Скачать CSV\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chart-table-container\">\r\n          <LineChart\r\n            width={1500}\r\n            height={700}\r\n            data={data}\r\n            style={{ backgroundColor: '#000', fontFamily: 'Roboto, sans-serif' }}\r\n          >\r\n            <CartesianGrid stroke=\"#444\" />\r\n            <XAxis\r\n              dataKey=\"timestamp\"\r\n              stroke=\"#FFD014\"\r\n              tickFormatter={str => {\r\n                const d = new Date(str);\r\n                return `${d.getHours()}:${d.getMinutes().toString().padStart(2,'0')}`;\r\n              }}\r\n            />\r\n            <YAxis stroke=\"#FFD014\" />\r\n            <Tooltip\r\n              contentStyle={{\r\n                backgroundColor: '#000',\r\n                borderColor: '#FFD014',\r\n                fontFamily: 'Roboto, sans-serif',\r\n              }}\r\n              labelFormatter={l => new Date(l).toLocaleString()}\r\n              formatter={val => {\r\n                const num = val == null ? NaN : Number(val);\r\n                return [isNaN(num) ? '—' : num.toFixed(2), ''];\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"value\"\r\n              stroke=\"#FFD014\"\r\n              dot={dotProps => {\r\n                const { cx, cy, payload, index } = dotProps;\r\n                const key = `${payload.timestamp}-${index}`;\r\n                const num = payload.value == null ? NaN : Number(payload.value);\r\n                const isOut = \r\n                  (minBound && !isNaN(num) && num < Number(minBound)) ||\r\n                  (maxBound && !isNaN(num) && num > Number(maxBound));\r\n                if (isOut && onAlert) {\r\n                  onAlert(payload.timestamp, num);\r\n                }\r\n                return (\r\n                  <circle\r\n                    key={key}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={isOut ? 6 : 4}\r\n                    fill={isOut ? 'red' : '#FFD014'}\r\n                    stroke=\"#FFD014\"\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </LineChart>\r\n\r\n          <div\r\n            className=\"data-table\"\r\n            style={{\r\n              height: 700,\r\n              overflowY: 'auto',\r\n              width: 300,\r\n            }}\r\n          >\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ color: '#FFD014' }}>Время</th>\r\n                  <th style={{ color: '#FFD014' }}>Значение</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((d, i) => {\r\n                  const num = d.value == null ? NaN : Number(d.value);\r\n                  return (\r\n                    <tr key={`${d.timestamp}-${i}`}>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {new Date(d.timestamp).toLocaleString()}\r\n                      </td>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {isNaN(num) ? '—' : num.toFixed(2)}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}