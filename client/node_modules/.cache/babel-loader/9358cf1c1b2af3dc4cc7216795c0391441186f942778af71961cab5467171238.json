{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\ChartModal.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/components/ChartModal.tsx\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport useFetch from '../hooks/useFetch';\nimport './ChartModal.css';\n\n// В точке данных будем хранить значение или null\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartModal = ({\n  visible,\n  onClose,\n  objectId,\n  type,\n  onAlert\n}) => {\n  _s();\n  if (!visible) return null;\n\n  // Закрытие по Esc\n  useEffect(() => {\n    const handler = e => {\n      if (e.key === 'Escape') onClose();\n    };\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [onClose]);\n  const titleMap = {\n    voltage: 'Напряжение / Время',\n    current: 'Ток / Время',\n    temperature: 'Температура / Время'\n  };\n  const title = titleMap[type];\n\n  // Параметры диапазона\n  const now = new Date();\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  const fmt = d => d.toISOString().slice(0, 16);\n  const [start, setStart] = useState(fmt(ago24h));\n  const [end, setEnd] = useState(fmt(now));\n  const [intervalMin, setIntervalMin] = useState(5);\n  const [minBound, setMinBound] = useState('');\n  const [maxBound, setMaxBound] = useState('');\n\n  // Запрос сырых данных\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\n  const {\n    data: rawData,\n    error,\n    loading\n  } = useFetch(`/api/objects/${objectId}/data${query}`);\n\n  // Обработка: генерируем всю шкалу времени и смешиваем с сырыми данными\n  const chartData = useMemo(() => {\n    if (!start || !end) return [];\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const timeline = [];\n\n    // Создаем интервалы\n    for (let cursor = new Date(startDate); cursor <= endDate; cursor = new Date(cursor.getTime() + intervalMin * 60 * 1000)) {\n      timeline.push({\n        timestamp: cursor.toISOString(),\n        value: null\n      });\n    }\n\n    // Map сырых данных по таймстампу, округленному до минут\n    const map = new Map();\n    rawData === null || rawData === void 0 ? void 0 : rawData.forEach(d => {\n      const dt = new Date(d.timestamp);\n      dt.setSeconds(0, 0);\n      map.set(dt.toISOString(), d.value);\n    });\n\n    // Объединяем\n    return timeline.map(pt => {\n      const val = map.get(pt.timestamp);\n      return {\n        timestamp: pt.timestamp,\n        value: val !== null && val !== void 0 ? val : null\n      };\n    });\n  }, [rawData, start, end, intervalMin]);\n\n  // CSV из объединенных данных\n  const csvContent = useMemo(() => {\n    if (!chartData.length) return '';\n    const header = ['timestamp', 'value'];\n    const rows = chartData.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\n  }, [chartData]);\n  const downloadCsv = () => {\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${type}_${start}_${end}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      onClick: e => e.stopPropagation(),\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: start,\n            onChange: e => setStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041F\\u043E:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: end,\n            onChange: e => setEnd(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B (\\u043C\\u0438\\u043D):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: intervalMin,\n            onChange: e => setIntervalMin(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0438\\u043D. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: minBound,\n            onChange: e => setMinBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0430\\u043A\\u0441. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: maxBound,\n            onChange: e => setMaxBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"csv-button\",\n          onClick: downloadCsv,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 500,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData,\n            style: {\n              backgroundColor: '#000',\n              fontFamily: 'Roboto, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              stroke: \"#444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"timestamp\",\n              stroke: \"#FFD014\",\n              tickFormatter: str => {\n                const d = new Date(str);\n                return `${d.getHours()}:${d.getMinutes().toString().padStart(2, '0')}`;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              stroke: \"#FFD014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              contentStyle: {\n                backgroundColor: '#000',\n                borderColor: '#FFD014',\n                fontFamily: 'Roboto, sans-serif'\n              },\n              labelFormatter: l => new Date(l).toLocaleString(),\n              formatter: val => {\n                const num = val == null ? NaN : Number(val);\n                return [isNaN(num) ? '—' : num.toFixed(2), ''];\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"value\",\n              stroke: \"#FFD014\",\n              dot: dotProps => {\n                const {\n                  cx,\n                  cy,\n                  payload,\n                  index\n                } = dotProps;\n                const key = `${payload.timestamp}-${index}`;\n                const num = payload.value == null ? NaN : Number(payload.value);\n                const isOut = minBound && !isNaN(num) && num < Number(minBound) || maxBound && !isNaN(num) && num > Number(maxBound);\n                if (isOut && onAlert) onAlert(payload.timestamp, num);\n                return /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: cx,\n                  cy: cy,\n                  r: isOut ? 6 : 4,\n                  fill: isOut ? 'red' : '#FFD014',\n                  stroke: \"#FFD014\",\n                  style: {\n                    cursor: 'pointer'\n                  }\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this);\n              },\n              connectNulls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table\",\n          style: {\n            height: 500,\n            overflowY: 'auto',\n            width: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: chartData.map((d, i) => {\n                const num = d.value == null ? NaN : Number(d.value);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: new Date(d.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: isNaN(num) ? '—' : num.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this)]\n                }, `${d.timestamp}-${i}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartModal, \"+VtKaSOECqTyRCUi4xq0KBPW59g=\", false, function () {\n  return [useFetch];\n});\n_c = ChartModal;\nexport default ChartModal;\nvar _c;\n$RefreshReg$(_c, \"ChartModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","useFetch","jsxDEV","_jsxDEV","ChartModal","visible","onClose","objectId","type","onAlert","_s","handler","e","key","window","addEventListener","removeEventListener","titleMap","voltage","current","temperature","title","now","Date","ago24h","getTime","fmt","d","toISOString","slice","start","setStart","end","setEnd","intervalMin","setIntervalMin","minBound","setMinBound","maxBound","setMaxBound","query","encodeURIComponent","data","rawData","error","loading","chartData","startDate","endDate","timeline","cursor","push","timestamp","value","map","Map","forEach","dt","setSeconds","set","pt","val","get","csvContent","length","header","rows","String","r","join","downloadCsv","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","onClick","children","stopPropagation","style","position","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","min","Number","placeholder","width","height","backgroundColor","fontFamily","stroke","dataKey","tickFormatter","str","getHours","getMinutes","toString","padStart","contentStyle","borderColor","labelFormatter","l","toLocaleString","formatter","num","NaN","isNaN","toFixed","dot","dotProps","cx","cy","payload","index","isOut","fill","connectNulls","overflowY","color","i","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/ChartModal.tsx"],"sourcesContent":["// File: client/src/components/ChartModal.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport useFetch from '../hooks/useFetch';\r\nimport './ChartModal.css';\r\n\r\n// В точке данных будем хранить значение или null\r\ninterface DataPoint {\r\n  timestamp: string;\r\n  value: number | null;\r\n}\r\n\r\ntype Metric = 'voltage' | 'current' | 'temperature';\r\n\r\ninterface ChartModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  objectId: number;\r\n  type: Metric;\r\n  onAlert?: (timestamp: string, value: number) => void;\r\n}\r\n\r\nconst ChartModal: React.FC<ChartModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  objectId,\r\n  type,\r\n  onAlert,\r\n}) => {\r\n  if (!visible) return null;\r\n\r\n  // Закрытие по Esc\r\n  useEffect(() => {\r\n    const handler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n    };\r\n    window.addEventListener('keydown', handler);\r\n    return () => window.removeEventListener('keydown', handler);\r\n  }, [onClose]);\r\n\r\n  const titleMap: Record<Metric, string> = {\r\n    voltage: 'Напряжение / Время',\r\n    current: 'Ток / Время',\r\n    temperature: 'Температура / Время',\r\n  };\r\n  const title = titleMap[type];\r\n\r\n  // Параметры диапазона\r\n  const now = new Date();\r\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const fmt = (d: Date) => d.toISOString().slice(0, 16);\r\n\r\n  const [start, setStart] = useState<string>(fmt(ago24h));\r\n  const [end, setEnd] = useState<string>(fmt(now));\r\n  const [intervalMin, setIntervalMin] = useState<number>(5);\r\n  const [minBound, setMinBound] = useState<string>('');\r\n  const [maxBound, setMaxBound] = useState<string>('');\r\n\r\n  // Запрос сырых данных\r\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(\r\n    end\r\n  )}&intervalMinutes=${intervalMin}&type=${type}`;\r\n  const { data: rawData, error, loading } = useFetch<{\r\n    timestamp: string;\r\n    value: number;\r\n  }[]>(`/api/objects/${objectId}/data${query}`);\r\n\r\n  // Обработка: генерируем всю шкалу времени и смешиваем с сырыми данными\r\n  const chartData = useMemo<DataPoint[]>(() => {\r\n    if (!start || !end) return [];\r\n    const startDate = new Date(start);\r\n    const endDate = new Date(end);\r\n    const timeline: DataPoint[] = [];\r\n\r\n    // Создаем интервалы\r\n    for (\r\n      let cursor = new Date(startDate);\r\n      cursor <= endDate;\r\n      cursor = new Date(cursor.getTime() + intervalMin * 60 * 1000)\r\n    ) {\r\n      timeline.push({ timestamp: cursor.toISOString(), value: null });\r\n    }\r\n\r\n    // Map сырых данных по таймстампу, округленному до минут\r\n    const map = new Map<string, number>();\r\n    rawData?.forEach(d => {\r\n      const dt = new Date(d.timestamp);\r\n      dt.setSeconds(0, 0);\r\n      map.set(dt.toISOString(), d.value);\r\n    });\r\n\r\n    // Объединяем\r\n    return timeline.map(pt => {\r\n      const val = map.get(pt.timestamp);\r\n      return { timestamp: pt.timestamp, value: val ?? null };\r\n    });\r\n  }, [rawData, start, end, intervalMin]);\r\n\r\n  // CSV из объединенных данных\r\n  const csvContent = useMemo(() => {\r\n    if (!chartData.length) return '';\r\n    const header = ['timestamp', 'value'];\r\n    const rows = chartData.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\r\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\r\n  }, [chartData]);\r\n\r\n  const downloadCsv = () => {\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${type}_${start}_${end}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-window\" onClick={e => e.stopPropagation()} style={{ position: 'relative' }}>\r\n        <button className=\"close-button\" onClick={onClose} aria-label=\"Закрыть\">\r\n          ×\r\n        </button>\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n        <div className=\"modal-controls\">\r\n          <label>\r\n            С:{' '}\r\n            <input type=\"datetime-local\" value={start} onChange={e => setStart(e.target.value)} />\r\n          </label>\r\n          <label>\r\n            По:{' '}\r\n            <input type=\"datetime-local\" value={end} onChange={e => setEnd(e.target.value)} />\r\n          </label>\r\n          <label>\r\n            Интервал (мин):{' '}\r\n            <input type=\"number\" min={1} value={intervalMin} onChange={e => setIntervalMin(Number(e.target.value))} />\r\n          </label>\r\n          <label>\r\n            Мин. граница:{' '}\r\n            <input type=\"text\" value={minBound} onChange={e => setMinBound(e.target.value)} placeholder=\"необязательно\" />\r\n          </label>\r\n          <label>\r\n            Макс. граница:{' '}\r\n            <input type=\"text\" value={maxBound} onChange={e => setMaxBound(e.target.value)} placeholder=\"необязательно\" />\r\n          </label>\r\n          <button className=\"csv-button\" onClick={downloadCsv}>Скачать CSV</button>\r\n        </div>\r\n        <div className=\"chart-table-container\">\r\n          <ResponsiveContainer width=\"100%\" height={500}>\r\n            <LineChart data={chartData} style={{ backgroundColor: '#000', fontFamily: 'Roboto, sans-serif' }}>\r\n              <CartesianGrid stroke=\"#444\" />\r\n              <XAxis\r\n                dataKey=\"timestamp\"\r\n                stroke=\"#FFD014\"\r\n                tickFormatter={str => {\r\n                  const d = new Date(str);\r\n                  return `${d.getHours()}:${d.getMinutes().toString().padStart(2, '0')}`;\r\n                }}\r\n              />\r\n              <YAxis stroke=\"#FFD014\" />\r\n              <Tooltip\r\n                contentStyle={{ backgroundColor: '#000', borderColor: '#FFD014', fontFamily: 'Roboto, sans-serif' }}\r\n                labelFormatter={l => new Date(l).toLocaleString()}\r\n                formatter={val => {\r\n                  const num = val == null ? NaN : Number(val);\r\n                  return [isNaN(num) ? '—' : num.toFixed(2), ''];\r\n                }}\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"value\"\r\n                stroke=\"#FFD014\"\r\n                dot={dotProps => {\r\n                  const { cx, cy, payload, index } = dotProps;\r\n                  const key = `${payload.timestamp}-${index}`;\r\n                  const num = payload.value == null ? NaN : Number(payload.value);\r\n                  const isOut =\r\n                    (minBound && !isNaN(num) && num < Number(minBound)) ||\r\n                    (maxBound && !isNaN(num) && num > Number(maxBound));\r\n                  if (isOut && onAlert) onAlert(payload.timestamp, num);\r\n                  return (\r\n                    <circle\r\n                      key={key}\r\n                      cx={cx}\r\n                      cy={cy}\r\n                      r={isOut ? 6 : 4}\r\n                      fill={isOut ? 'red' : '#FFD014'}\r\n                      stroke=\"#FFD014\"\r\n                      style={{ cursor: 'pointer' }}\r\n                    />\r\n                  );\r\n                }}\r\n                connectNulls\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n\r\n          <div className=\"data-table\" style={{ height: 500, overflowY: 'auto', width: 300 }}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ color: '#FFD014' }}>Время</th>\r\n                  <th style={{ color: '#FFD014' }}>Значение</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {chartData.map((d, i) => {\r\n                  const num = d.value == null ? NaN : Number(d.value);\r\n                  return (\r\n                    <tr key={`${d.timestamp}-${i}`}>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {new Date(d.timestamp).toLocaleString()}\r\n                      </td>\r\n                      <td style={{ color: '#FFD014' }}>\r\n                        {isNaN(num) ? '—' : num.toFixed(2)}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}