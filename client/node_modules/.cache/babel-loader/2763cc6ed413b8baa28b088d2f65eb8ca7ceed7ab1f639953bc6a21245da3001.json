{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fedelesh_dm\\\\worksitegraphs\\\\client\\\\src\\\\components\\\\ChartModal.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/components/ChartModal.tsx\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport useFetch from '../hooks/useFetch';\nimport './ChartModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartModal = ({\n  visible,\n  onClose,\n  objectId,\n  type,\n  onAlert\n}) => {\n  _s();\n  // ─── Хуки: ВСЕ вызываются до любых return ───────────────────────────────────\n\n  // Маппинг типа на заголовок\n  const titleMap = {\n    voltage: 'Напряжение / Время',\n    current: 'Ток / Время',\n    temperature: 'Температура / Время'\n  };\n  const title = titleMap[type];\n\n  // Диапазон по умолчанию — последние 24 часа\n  const now = new Date();\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  const fmtLocal = d => d.toISOString().slice(0, 16);\n  const [start, setStart] = useState(fmtLocal(ago24h));\n  const [end, setEnd] = useState(fmtLocal(now));\n  const [intervalMin, setIntervalMin] = useState(5);\n  const [minBound, setMinBound] = useState('');\n  const [maxBound, setMaxBound] = useState('');\n\n  // Закрытие по клавише Esc\n  useEffect(() => {\n    const handler = e => {\n      if (e.key === 'Escape') onClose();\n    };\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, [onClose]);\n\n  // Запрос данных\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\n  const {\n    data: rawData,\n    error\n  } = useFetch(`/api/objects/${objectId}/data${query}`);\n  // Безопасный массив: либо пришло, либо null\n  const data = Array.isArray(rawData) ? rawData : null;\n\n  // CSV-генерация\n  const csvContent = useMemo(() => {\n    if (!data) return '';\n    const header = ['timestamp', 'value'];\n    const rows = data.map(d => [d.timestamp, d.value != null ? String(d.value) : '']);\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\n  }, [data]);\n  const downloadCsv = () => {\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${type}_${start}_${end}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // ─── Условный рендеринг ─────────────────────────────────────────────────────\n\n  // Если невидимо — сразу null\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: start,\n            onChange: e => setStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041F\\u043E:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: end,\n            onChange: e => setEnd(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B (\\u043C\\u0438\\u043D):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: intervalMin,\n            onChange: e => setIntervalMin(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0438\\u043D. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: minBound,\n            onChange: e => setMinBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041C\\u0430\\u043A\\u0441. \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: maxBound,\n            onChange: e => setMaxBound(e.target.value),\n            placeholder: \"\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"csv-button\",\n          onClick: downloadCsv,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), !data && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 20,\n          color: '#FFD014',\n          fontFamily: 'Roboto'\n        },\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(LineChart, {\n          width: 1500,\n          height: 700,\n          data: data,\n          style: {\n            backgroundColor: '#000',\n            fontFamily: 'Roboto, sans-serif'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#444\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"timestamp\",\n            stroke: \"#FFD014\",\n            tickFormatter: str => {\n              const d = new Date(str);\n              return `${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#FFD014\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#000',\n              borderColor: '#FFD014',\n              fontFamily: 'Roboto, sans-serif'\n            },\n            labelFormatter: l => new Date(l).toLocaleString(),\n            formatter: val => {\n              const num = val == null ? NaN : Number(val);\n              return [isNaN(num) ? '—' : num.toFixed(2), ''];\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\",\n            stroke: \"#FFD014\",\n            dot: dotProps => {\n              const {\n                cx,\n                cy,\n                payload,\n                index\n              } = dotProps;\n              const key = `${payload.timestamp}-${index}`;\n              const num = payload.value == null ? NaN : Number(payload.value);\n              const isOut = minBound && !isNaN(num) && num < Number(minBound) || maxBound && !isNaN(num) && num > Number(maxBound);\n              if (isOut && onAlert) {\n                onAlert(payload.timestamp, num);\n              }\n              return /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: isOut ? 6 : 4,\n                fill: isOut ? 'red' : '#FFD014',\n                stroke: \"#FFD014\",\n                style: {\n                  cursor: 'pointer'\n                }\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table\",\n          style: {\n            height: 700,\n            overflowY: 'auto',\n            width: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    color: '#FFD014'\n                  },\n                  children: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((d, i) => {\n                const num = d.value == null ? NaN : Number(d.value);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: new Date(d.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#FFD014'\n                    },\n                    children: isNaN(num) ? '—' : num.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this)]\n                }, `${d.timestamp}-${i}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartModal, \"dODajJvnRMf+IZjoP5xsgUBtcK8=\", false, function () {\n  return [useFetch];\n});\n_c = ChartModal;\nexport default ChartModal;\nvar _c;\n$RefreshReg$(_c, \"ChartModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","useFetch","jsxDEV","_jsxDEV","ChartModal","visible","onClose","objectId","type","onAlert","_s","titleMap","voltage","current","temperature","title","now","Date","ago24h","getTime","fmtLocal","d","toISOString","slice","start","setStart","end","setEnd","intervalMin","setIntervalMin","minBound","setMinBound","maxBound","setMaxBound","handler","e","key","window","addEventListener","removeEventListener","query","encodeURIComponent","data","rawData","error","Array","isArray","csvContent","header","rows","map","timestamp","value","String","r","join","downloadCsv","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","min","Number","placeholder","style","padding","color","fontFamily","width","height","backgroundColor","stroke","dataKey","tickFormatter","str","getHours","padStart","getMinutes","contentStyle","borderColor","labelFormatter","l","toLocaleString","formatter","val","num","NaN","isNaN","toFixed","dot","dotProps","cx","cy","payload","index","isOut","fill","cursor","overflowY","i","_c","$RefreshReg$"],"sources":["C:/Users/fedelesh_dm/worksitegraphs/client/src/components/ChartModal.tsx"],"sourcesContent":["// File: client/src/components/ChartModal.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport useFetch from '../hooks/useFetch';\r\nimport './ChartModal.css';\r\n\r\ntype Metric = 'voltage' | 'current' | 'temperature';\r\n\r\ninterface DataPoint {\r\n  timestamp: string;\r\n  value: string | number | null;\r\n}\r\n\r\ninterface ChartModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  objectId: number;\r\n  type: Metric;\r\n  onAlert?: (timestamp: string, value: number) => void;\r\n}\r\n\r\nconst ChartModal: React.FC<ChartModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  objectId,\r\n  type,\r\n  onAlert,\r\n}) => {\r\n  // ─── Хуки: ВСЕ вызываются до любых return ───────────────────────────────────\r\n\r\n  // Маппинг типа на заголовок\r\n  const titleMap: Record<Metric, string> = {\r\n    voltage:     'Напряжение / Время',\r\n    current:     'Ток / Время',\r\n    temperature: 'Температура / Время',\r\n  };\r\n  const title = titleMap[type];\r\n\r\n  // Диапазон по умолчанию — последние 24 часа\r\n  const now    = new Date();\r\n  const ago24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const fmtLocal = (d: Date) => d.toISOString().slice(0, 16);\r\n\r\n  const [start, setStart]             = useState<string>(fmtLocal(ago24h));\r\n  const [end, setEnd]                 = useState<string>(fmtLocal(now));\r\n  const [intervalMin, setIntervalMin] = useState<number>(5);\r\n  const [minBound, setMinBound]       = useState<string>('');\r\n  const [maxBound, setMaxBound]       = useState<string>('');\r\n\r\n  // Закрытие по клавише Esc\r\n  useEffect(() => {\r\n    const handler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n    };\r\n    window.addEventListener('keydown', handler);\r\n    return () => window.removeEventListener('keydown', handler);\r\n  }, [onClose]);\r\n\r\n  // Запрос данных\r\n  const query = `?start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}&intervalMinutes=${intervalMin}&type=${type}`;\r\n  const { data: rawData, error } = useFetch<DataPoint[]>(\r\n    `/api/objects/${objectId}/data${query}`\r\n  );\r\n  // Безопасный массив: либо пришло, либо null\r\n  const data = Array.isArray(rawData) ? rawData : null;\r\n\r\n  // CSV-генерация\r\n  const csvContent = useMemo(() => {\r\n    if (!data) return '';\r\n    const header = ['timestamp','value'];\r\n    const rows = data.map(d => [\r\n      d.timestamp,\r\n      d.value != null ? String(d.value) : '',\r\n    ]);\r\n    return [header, ...rows].map(r => r.join(',')).join('\\n');\r\n  }, [data]);\r\n\r\n  const downloadCsv = () => {\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url  = URL.createObjectURL(blob);\r\n    const a    = document.createElement('a');\r\n    a.href     = url;\r\n    a.download = `${type}_${start}_${end}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // ─── Условный рендеринг ─────────────────────────────────────────────────────\r\n\r\n  // Если невидимо — сразу null\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div\r\n        className=\"modal-window\"\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        <button\r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          aria-label=\"Закрыть\"\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n\r\n        <div className=\"modal-controls\">\r\n          <label>\r\n            С:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={start}\r\n              onChange={e => setStart(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            По:{' '}\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={end}\r\n              onChange={e => setEnd(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Интервал (мин):{' '}\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={intervalMin}\r\n              onChange={e => setIntervalMin(Number(e.target.value))}\r\n            />\r\n          </label>\r\n          <label>\r\n            Мин. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={minBound}\r\n              onChange={e => setMinBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Макс. граница:{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={maxBound}\r\n              onChange={e => setMaxBound(e.target.value)}\r\n              placeholder=\"необязательно\"\r\n            />\r\n          </label>\r\n          <button className=\"csv-button\" onClick={downloadCsv}>\r\n            Скачать CSV\r\n          </button>\r\n        </div>\r\n\r\n        {/* Лоадер */}\r\n        {!data && (\r\n          <div style={{ padding: 20, color: '#FFD014', fontFamily: 'Roboto' }}>\r\n            Загрузка данных…\r\n          </div>\r\n        )}\r\n\r\n        {/* Основной контент: график + таблица */}\r\n        {data && (\r\n          <div className=\"chart-table-container\">\r\n            <LineChart\r\n              width={1500}\r\n              height={700}\r\n              data={data}\r\n              style={{ backgroundColor: '#000', fontFamily: 'Roboto, sans-serif' }}\r\n            >\r\n              <CartesianGrid stroke=\"#444\" />\r\n              <XAxis\r\n                dataKey=\"timestamp\"\r\n                stroke=\"#FFD014\"\r\n                tickFormatter={str => {\r\n                  const d = new Date(str);\r\n                  return `${String(d.getHours()).padStart(2,'0')}:${String(d.getMinutes()).padStart(2,'0')}`;\r\n                }}\r\n              />\r\n              <YAxis stroke=\"#FFD014\" />\r\n              <Tooltip\r\n                contentStyle={{\r\n                  backgroundColor: '#000',\r\n                  borderColor: '#FFD014',\r\n                  fontFamily: 'Roboto, sans-serif',\r\n                }}\r\n                labelFormatter={l => new Date(l).toLocaleString()}\r\n                formatter={val => {\r\n                  const num = val == null ? NaN : Number(val);\r\n                  return [isNaN(num) ? '—' : num.toFixed(2), ''];\r\n                }}\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"value\"\r\n                stroke=\"#FFD014\"\r\n                dot={dotProps => {\r\n                  const { cx, cy, payload, index } = dotProps;\r\n                  const key = `${payload.timestamp}-${index}`;\r\n                  const num = payload.value == null ? NaN : Number(payload.value);\r\n                  const isOut =\r\n                    (minBound && !isNaN(num) && num < Number(minBound)) ||\r\n                    (maxBound && !isNaN(num) && num > Number(maxBound));\r\n                  if (isOut && onAlert) {\r\n                    onAlert(payload.timestamp, num);\r\n                  }\r\n                  return (\r\n                    <circle\r\n                      key={key}\r\n                      cx={cx}\r\n                      cy={cy}\r\n                      r={isOut ? 6 : 4}\r\n                      fill={isOut ? 'red' : '#FFD014'}\r\n                      stroke=\"#FFD014\"\r\n                      style={{ cursor: 'pointer' }}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n            </LineChart>\r\n\r\n            <div\r\n              className=\"data-table\"\r\n              style={{\r\n                height: 700,\r\n                overflowY: 'auto',\r\n                width: 300,\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ color: '#FFD014' }}>Время</th>\r\n                    <th style={{ color: '#FFD014' }}>Значение</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((d, i) => {\r\n                    const num = d.value == null ? NaN : Number(d.value);\r\n                    return (\r\n                      <tr key={`${d.timestamp}-${i}`}>\r\n                        <td style={{ color: '#FFD014' }}>\r\n                          {new Date(d.timestamp).toLocaleString()}\r\n                        </td>\r\n                        <td style={{ color: '#FFD014' }}>\r\n                          {isNaN(num) ? '—' : num.toFixed(2)}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}